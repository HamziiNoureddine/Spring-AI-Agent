spring.application.name=AgentSpring
#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
# --- OpenAI officiel ---

spring.main.web-application-type=servlet
spring.ai.openai.api-key=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
spring.ai.openai.base-url=https://api.groq.com/openai/
spring.ai.openai.chat.model=llama3-8b-8192

# --- PostgreSQL Configuration ---
spring.datasource.url=jdbc:postgresql://localhost:6000/agentai
spring.datasource.username=postgres
spring.datasource.password=noureddine
spring.datasource.driver-class-name=org.postgresql.Driver

# --- JPA / Hibernate ---
spring.jpa.database=postgresql
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# --- (Optionnel) Formatage SQL ---
spring.jpa.properties.hibernate.format_sql=true